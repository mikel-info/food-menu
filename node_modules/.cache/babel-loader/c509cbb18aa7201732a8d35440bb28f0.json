{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Helius\\\\Desktop\\\\Section 11\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updateItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(updatedItem);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Helius/Desktop/Section 11/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updateItem","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAAQC,UAAR,QAAyB,OAAzB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,iBAAiB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA9E;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAuBJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAxD,CAA9B;AAEA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AAIA,QAAII,YAAJ;;AAEA,QAAGD,gBAAH,EAAoB;AAChB,YAAME,UAAU,GAAG,EACf,GAAGF,gBADY;AAEfJ,QAAAA,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAF/B,OAAnB;AAKAK,MAAAA,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;AACAc,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCM,WAAtC;AACH,KARD,MAQO;AAEHF,MAAAA,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmBD,WAAnB,CAAf;AACH;;AAED,WAAO;AACHhB,MAAAA,KAAK,EAAEc,YADJ;AAEHb,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACA,SAAOP,gBAAP;AACJ,CA/BD;;AAiCA,MAAMmB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMuB,oBAAoB,GAAIf,IAAD,IAAS;AAClCc,IAAAA,kBAAkB,CAAC;AAAChB,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMgB,yBAAyB,GAAIX,EAAD,IAAO;AACrCS,IAAAA,kBAAkB,CAAC;AAAChB,MAAAA,IAAI,EAAE,QAAP;AAAiBO,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMY,WAAW,GAAG;AAChBxB,IAAAA,KAAK,EAAEoB,SAAS,CAACpB,KADD;AAEhBC,IAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFP;AAGhBwB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CApBD;;GAAMT,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport {useReducer} from 'react';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD'){\r\n        const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount; \r\n\r\n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id)\r\n\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n       \r\n\r\n        \r\n        let updatedItems;\r\n\r\n        if(existingCartItem){\r\n            const updateItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            };\r\n\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        } else {\r\n            \r\n            updatedItems = state.items.concat(updatedItem);\r\n        }\r\n        \r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updateTotalAmount\r\n        };\r\n    }\r\n     return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = (item) =>{\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    }\r\n    const removeItemFromCartHandler = (id) =>{\r\n        dispatchCartAction({type: 'REMOVE', id: id});\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    };\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}